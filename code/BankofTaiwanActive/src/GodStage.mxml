<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="400" height="300" xmlns:local="*" creationComplete="group1_creationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import event.TiBallotEvent;
			
			import handler.XmlDataHandler;
			
			import lib.Ballot;
			import lib.TiDisableTextField;
			
			private var m_xmlDataHandler:XmlDataHandler = new XmlDataHandler();
			private var m_timer:Timer = new Timer(3000,1)
			private var m_Ballot:Ballot	
			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				fnInit();
			}
			
			private function fnInit():void
			{
				fnHideGod();
				TiDisableTextField.fnSetButtonAndDisableAllTextField(mcMsg.btn_goto_index);
				TiDisableTextField.fnSetButtonAndDisableAllTextField(mcMsg.btn_sign);
				TiDisableTextField.fnDisableAllTextField(mcMsg);
				mcMsg.btn_goto_index.addEventListener(MouseEvent.CLICK,fnGotoIndex);
				mcMsg.btn_sign.addEventListener(MouseEvent.CLICK,fnSign);
			}
			
			private function fnHideGod():void
			{
				mcGuanGong.visible=false;
				mcGuanyin.visible =false;
				mcMatchmake.visible =false;
				mcMiLeBuddha.visible=false;
				mcWealth.visible=false;
				mcWenchang.visible=false;
				mcMsg.visible=false;
			}
			public function fnRequestXMLDataHandler():void
			{
				fnHideGod();
				m_xmlDataHandler.fnRequestXmlData();
				m_xmlDataHandler.addEventListener(TiBallotEvent.GET_BALLOT_XML_DATA_EVENT,fnGetBallotDataHandler);
				m_timer.addEventListener(TimerEvent.TIMER_COMPLETE,fnShowBallotResult);
				m_timer.start();
			}
			
			private function fnGetBallotDataHandler(ev:TiBallotEvent):void
			{
				// TODO Auto-generated method stub
				m_Ballot = new Ballot();
				m_Ballot.m_AllTimes = ev.m_ballot.m_AllTimes;
				m_Ballot.m_nBallot = ev.m_ballot.m_nBallot;
				m_Ballot.m_CanUsedTimes = ev.m_ballot.m_CanUsedTimes;
				m_Ballot.m_UsedTimes = ev.m_ballot.m_UsedTimes;
			}
			
			protected function fnGotoIndex(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var myLink:String="../index.html";
				var linkRequest:URLRequest=new URLRequest(myLink);
				navigateToURL(linkRequest);
			}
			
			protected function fnSign(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				fnHideGod();
				var ev:TiBallotEvent =new TiBallotEvent(TiBallotEvent.RESET_BALLOT_EVENT);
				dispatchEvent(ev);
			}
			
			
			
			protected function fnShowBallotResult(event:TimerEvent):void
			{
				// TODO Auto-generated method stub
				m_timer.reset();
				
				switch(m_Ballot.m_nBallot)
				{
					case 1:
						mcGuanyin.visible=true;
						break;
					case 2:
						mcMatchmake.visible=true;
						break;
					case 3:
						mcWenchang.visible=true;
						break;
					case 4:
						mcWealth.visible=true;
						break;
					case 5:
						mcGuanGong.visible=true;
						break;
						case 6:
						mcMiLeBuddha.visible=true;
						break;
					
				}
				
				mcMsg.txt_remaining_choices.text = m_Ballot.m_CanUsedTimes.toString();
				mcMsg.txt_total_choices.text = m_Ballot.m_AllTimes.toString();
				mcMsg.txt_used_choices.text = m_Ballot.m_UsedTimes.toString();
				var tf:TextFormat = new TextFormat();
				if(m_Ballot.m_CanUsedTimes == 0)
				{
					tf.color =  0xFF0000 ;
					mcMsg.btn_sign.visible=false;
				}
				else
				{
					tf.color =  0x000000 ;
					mcMsg.btn_sign.visible=true;
				}
				mcMsg.txt_remaining_choices.setTextFormat(tf);
				mcMsg.visible=true;
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<local:God_GuanGong id="mcGuanGong" />
	<local:God_Guanyin id="mcGuanyin"/>
	<local:God_Matchmaker id="mcMatchmake"/>
	<local:God_MiLeBuddha id="mcMiLeBuddha"/>
	<local:God_Wealth id="mcWealth"/>
	<local:God_Wenchang id="mcWenchang"/>
	<local:action id="mcMsg" x="58.9" y="384.5"/>
</s:Group>
